name: Build

on: [push]

env:
  AZURE_WEBAPP_NAME: filc-naplo    # set this to your application's name
  AZURE_WEBAPP_PACKAGE_PATH: '.'      # set this to the path to your web app project, defaults to the repository root

jobs:
  build:
    runs-on: [ubuntu-latest]

    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: '10.x'
      - uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - run: cd frontend && npm install -D
      - name: build
        run: cd frontend && npm run build
      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"
      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"
      - uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-
      - name: Install Dependencies
        run: composer install --no-interaction --no-scripts --no-suggest --no-progress --prefer-dist --optimize-autoloader --no-dev
      - name: cache config
        run: php artisan config:cache
      - name: Remove unnecesary files
        run: |
          rm -r frontend
          rm -r tests
          rm -r .git
          rm -r .vscode
          rm -r .idea
 #     - run: zip -r my-artifact . .env -x */\.* *.git*
  #    - name: Create Release
   #     id: create_release
    #    uses: actions/create-release@v1.0.0
     #   env:
      #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
       # with:
        #  tag_name: v3
         # release_name: Release v3
          #draft: false
        #  prerelease: false
      #- name: Upload Release Asset
     #   id: upload-release-asset 
     #   uses: actions/upload-release-asset@v1.0.1
    #    env:
    #      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
   #     with:
   #       upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
  #        asset_path: ./my-artifact.zip
  #        asset_name: my-artifact.zip
  #        asset_content_type: application/zip
      - name: 'Deploy to Azure WebApp'
        uses: azure/webapps-deploy@v1
        with: 
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}