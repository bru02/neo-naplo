{"version":3,"sources":["webpack:///../src/client.ts","webpack:///../src/sdk.ts","webpack:///../src/vue.ts","webpack:///./resources/ts/sentry.ts","webpack:///(webpack)/buildin/harmony-module.js","webpack:///../src/logger.ts","webpack:///../src/misc.ts","webpack:///../src/scope.ts","webpack:///../src/hub.ts"],"names":["client_BrowserClient","_super","BrowserClient","options","call","this","_backend__WEBPACK_IMPORTED_MODULE_2__","undefined","prototype","_prepareEvent","event","scope","hint","platform","sdk","name","_version__WEBPACK_IMPORTED_MODULE_3__","packages","version","showReportDialog","document","Object","misc","_isEnabled","dsn","getDsn","eventId","script","createElement","async","src","_sentry_core__WEBPACK_IMPORTED_MODULE_0__","getReportDialogEndpoint","onLoad","onload","head","body","appendChild","logger","error","_sentry_core__WEBPACK_IMPORTED_MODULE_1__","sdk_sentry_core_WEBPACK_IMPORTED_MODULE_0_","__webpack_require__","_integrations__WEBPACK_IMPORTED_MODULE_2__","_integrations__WEBPACK_IMPORTED_MODULE_3__","_integrations__WEBPACK_IMPORTED_MODULE_4__","_integrations__WEBPACK_IMPORTED_MODULE_5__","_integrations__WEBPACK_IMPORTED_MODULE_6__","defaultIntegrations","InboundFilters","FunctionToString","_sentry_utils__WEBPACK_IMPORTED_MODULE_0__","release","window_1","SENTRY_RELEASE","id","clientClass","debug","enable","hub","bindClient","initAndBind","init","integrations","Vue","_attachProps","_Vue","attachProps","_formatComponentName","vm","$root","_isVue","$options","_componentTag","__file","setupOnce","_","getCurrentHub","_this","config","oldOnError","errorHandler","info","metadata","componentName","propsData","lifecycleHook","getIntegration","setTimeout","withScope","setContext","captureException","vue_esm","module","exports","originalModule","webpackPolyfill","create","children","defineProperty","enumerable","get","l","i","d","__webpack_exports__","_misc__WEBPACK_IMPORTED_MODULE_0__","global","PREFIX","Logger","_enabled","disable","log","args","_i","arguments","length","console","join","warn","__SENTRY__","process","dynamicRequire","mod","request","require","getGlobalObject","fallbackGlobalObject","toString","window","self","Scope","_notifyingListeners","_scopeListeners","_eventProcessors","_breadcrumbs","_user","_tags","_extra","_context","addScopeListener","callback","push","addEventProcessor","_notifyScopeListeners","forEach","_notifyEventProcessors","processors","index","_sentry_utils__WEBPACK_IMPORTED_MODULE_1__","resolve","reject","processor","result","_sentry_utils__WEBPACK_IMPORTED_MODULE_2__","then","final","catch","setUser","user","_sentry_utils__WEBPACK_IMPORTED_MODULE_3__","setTags","tags","setTag","key","value","_a","setExtras","extra","setExtra","setFingerprint","fingerprint","_fingerprint","setLevel","level","_level","setTransaction","transaction","_transaction","context","setSpan","span","_span","startSpan","parentSpan","_span__WEBPACK_IMPORTED_MODULE_5__","setParent","getSpan","clone","newScope","assign","clear","addBreadcrumb","breadcrumb","maxBreadcrumbs","mergedBreadcrumb","timestamp","Date","getTime","slice","clearBreadcrumbs","_applyFingerprint","Array","isArray","concat","applyToEvent","keys","contexts","trace","breadcrumbs","getGlobalEventProcessors","_sentry_utils__WEBPACK_IMPORTED_MODULE_4__","globalEventProcessors","API_VERSION","Hub","client","_version","_scope__WEBPACK_IMPORTED_MODULE_3__","_stack","_invokeClient","method","top","getStackTop","apply","isOlderThan","pushScope","stack","getStack","parentScope","getClient","popScope","pop","getScope","exception","_lastEventId","finalHint","syntheticException","Error","originalException","event_id","captureMessage","message","captureEvent","lastEventId","getOptions","_b","beforeBreadcrumb","_c","finalBreadcrumb","Math","min","extras","configureScope","run","oldHub","makeMain","integration","_oO","traceHeaders","sentry-trace","toTraceparent","getMainCarrier","carrier","registry","getHubFromCarrier","setHubOnCarrier","hasHubOnCarrier","activeDomain","active","registryHubTopStack","_Oo"],"mappings":"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","file":"sentry.js","sourcesContent":["import { API, BaseClient, Scope } from '@sentry/core';\nimport { DsnLike, Event, EventHint } from '@sentry/types';\nimport { getGlobalObject, logger, SyncPromise } from '@sentry/utils';\n\nimport { BrowserBackend, BrowserOptions } from './backend';\nimport { SDK_NAME, SDK_VERSION } from './version';\n\n/**\n * All properties the report dialog supports\n */\nexport interface ReportDialogOptions {\n  [key: string]: any;\n  eventId?: string;\n  dsn?: DsnLike;\n  user?: {\n    email?: string;\n    name?: string;\n  };\n  lang?: string;\n  title?: string;\n  subtitle?: string;\n  subtitle2?: string;\n  labelName?: string;\n  labelEmail?: string;\n  labelComments?: string;\n  labelClose?: string;\n  labelSubmit?: string;\n  errorGeneric?: string;\n  errorFormEntry?: string;\n  successMessage?: string;\n  /** Callback after reportDialog showed up */\n  onLoad?(): void;\n}\n\n/**\n * The Sentry Browser SDK Client.\n *\n * @see BrowserOptions for documentation on configuration options.\n * @see SentryClient for usage documentation.\n */\nexport class BrowserClient extends BaseClient<BrowserBackend, BrowserOptions> {\n  /**\n   * Creates a new Browser SDK instance.\n   *\n   * @param options Configuration options for this SDK.\n   */\n  public constructor(options: BrowserOptions = {}) {\n    super(BrowserBackend, options);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  protected _prepareEvent(event: Event, scope?: Scope, hint?: EventHint): SyncPromise<Event | null> {\n    event.platform = event.platform || 'javascript';\n    event.sdk = {\n      ...event.sdk,\n      name: SDK_NAME,\n      packages: [\n        ...((event.sdk && event.sdk.packages) || []),\n        {\n          name: 'npm:@sentry/browser',\n          version: SDK_VERSION,\n        },\n      ],\n      version: SDK_VERSION,\n    };\n\n    return super._prepareEvent(event, scope, hint);\n  }\n\n  /**\n   * Show a report dialog to the user to send feedback to a specific event.\n   *\n   * @param options Set individual options for the dialog\n   */\n  public showReportDialog(options: ReportDialogOptions = {}): void {\n    // doesn't work without a document (React Native)\n    const document = getGlobalObject<Window>().document;\n    if (!document) {\n      return;\n    }\n\n    if (!this._isEnabled()) {\n      logger.error('Trying to call showReportDialog with Sentry Client is disabled');\n      return;\n    }\n\n    const dsn = options.dsn || this.getDsn();\n\n    if (!options.eventId) {\n      logger.error('Missing `eventId` option in showReportDialog call');\n      return;\n    }\n\n    if (!dsn) {\n      logger.error('Missing `Dsn` option in showReportDialog call');\n      return;\n    }\n\n    const script = document.createElement('script');\n    script.async = true;\n    script.src = new API(dsn).getReportDialogEndpoint(options);\n\n    if (options.onLoad) {\n      script.onload = options.onLoad;\n    }\n\n    (document.head || document.body).appendChild(script);\n  }\n}\n","import { getCurrentHub, initAndBind, Integrations as CoreIntegrations } from '@sentry/core';\nimport { getGlobalObject } from '@sentry/utils';\n\nimport { BrowserOptions } from './backend';\nimport { BrowserClient, ReportDialogOptions } from './client';\nimport { wrap as internalWrap } from './helpers';\nimport { Breadcrumbs, GlobalHandlers, LinkedErrors, TryCatch, UserAgent } from './integrations';\n\nexport const defaultIntegrations = [\n  new CoreIntegrations.InboundFilters(),\n  new CoreIntegrations.FunctionToString(),\n  new TryCatch(),\n  new Breadcrumbs(),\n  new GlobalHandlers(),\n  new LinkedErrors(),\n  new UserAgent(),\n];\n\n/**\n * The Sentry Browser SDK Client.\n *\n * To use this SDK, call the {@link init} function as early as possible when\n * loading the web page. To set context information or send manual events, use\n * the provided methods.\n *\n * @example\n *\n * ```\n *\n * import { init } from '@sentry/browser';\n *\n * init({\n *   dsn: '__DSN__',\n *   // ...\n * });\n * ```\n *\n * @example\n * ```\n *\n * import { configureScope } from '@sentry/browser';\n * configureScope((scope: Scope) => {\n *   scope.setExtra({ battery: 0.7 });\n *   scope.setTag({ user_mode: 'admin' });\n *   scope.setUser({ id: '4711' });\n * });\n * ```\n *\n * @example\n * ```\n *\n * import { addBreadcrumb } from '@sentry/browser';\n * addBreadcrumb({\n *   message: 'My Breadcrumb',\n *   // ...\n * });\n * ```\n *\n * @example\n *\n * ```\n *\n * import * as Sentry from '@sentry/browser';\n * Sentry.captureMessage('Hello, world!');\n * Sentry.captureException(new Error('Good bye'));\n * Sentry.captureEvent({\n *   message: 'Manual',\n *   stacktrace: [\n *     // ...\n *   ],\n * });\n * ```\n *\n * @see {@link BrowserOptions} for documentation on configuration options.\n */\nexport function init(options: BrowserOptions = {}): void {\n  if (options.defaultIntegrations === undefined) {\n    options.defaultIntegrations = defaultIntegrations;\n  }\n  if (options.release === undefined) {\n    const window = getGlobalObject<Window>();\n    // This supports the variable that sentry-webpack-plugin injects\n    if (window.SENTRY_RELEASE && window.SENTRY_RELEASE.id) {\n      options.release = window.SENTRY_RELEASE.id;\n    }\n  }\n  initAndBind(BrowserClient, options);\n}\n\n/**\n * Present the user with a report dialog.\n *\n * @param options Everything is optional, we try to fetch all info need from the global scope.\n */\nexport function showReportDialog(options: ReportDialogOptions = {}): void {\n  if (!options.eventId) {\n    options.eventId = getCurrentHub().lastEventId();\n  }\n  const client = getCurrentHub().getClient<BrowserClient>();\n  if (client) {\n    client.showReportDialog(options);\n  }\n}\n\n/**\n * This is the getter for lastEventId.\n *\n * @returns The last event id of a captured event.\n */\nexport function lastEventId(): string | undefined {\n  return getCurrentHub().lastEventId();\n}\n\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\nexport function forceLoad(): void {\n  // Noop\n}\n\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\nexport function onLoad(callback: () => void): void {\n  callback();\n}\n\n/**\n * A promise that resolves when all current events have been sent.\n * If you provide a timeout and the queue takes longer to drain the promise returns false.\n *\n * @param timeout Maximum time in ms the client should wait.\n */\nexport function flush(timeout?: number): Promise<boolean> {\n  const client = getCurrentHub().getClient<BrowserClient>();\n  if (client) {\n    return client.flush(timeout);\n  }\n  return Promise.reject(false);\n}\n\n/**\n * A promise that resolves when all current events have been sent.\n * If you provide a timeout and the queue takes longer to drain the promise returns false.\n *\n * @param timeout Maximum time in ms the client should wait.\n */\nexport function close(timeout?: number): Promise<boolean> {\n  const client = getCurrentHub().getClient<BrowserClient>();\n  if (client) {\n    return client.close(timeout);\n  }\n  return Promise.reject(false);\n}\n\n/**\n * Wrap code within a try/catch block so the SDK is able to capture errors.\n *\n * @param fn A function to wrap.\n */\nexport function wrap(fn: Function): void {\n  // tslint:disable-next-line: no-unsafe-any\n  internalWrap(fn)();\n}\n","import { EventProcessor, Hub, Integration } from '@sentry/types';\nimport { getGlobalObject, isPlainObject, logger } from '@sentry/utils';\n\n/** JSDoc */\ninterface Metadata {\n  [key: string]: any;\n  componentName?: string;\n  propsData?: {\n    [key: string]: any;\n  };\n  lifecycleHook?: string;\n}\n\n/** JSDoc */\nexport class Vue implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public name: string = Vue.id;\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'Vue';\n\n  /**\n   * @inheritDoc\n   */\n  private readonly _Vue: any; // tslint:disable-line:variable-name\n\n  /**\n   * When set to false, Sentry will suppress reporting all props data\n   * from your Vue components for privacy concerns.\n   */\n  private readonly _attachProps: boolean = true;\n\n  /**\n   * @inheritDoc\n   */\n  public constructor(options: { Vue?: any; attachProps?: boolean } = {}) {\n    // tslint:disable-next-line: no-unsafe-any\n    this._Vue = options.Vue || getGlobalObject<any>().Vue;\n    if (options.attachProps === false) {\n      this._attachProps = false;\n    }\n  }\n\n  /** JSDoc */\n  private _formatComponentName(vm: any): string {\n    // tslint:disable:no-unsafe-any\n\n    if (vm.$root === vm) {\n      return 'root instance';\n    }\n    const name = vm._isVue ? vm.$options.name || vm.$options._componentTag : vm.name;\n    return (\n      (name ? `component <${name}>` : 'anonymous component') +\n      (vm._isVue && vm.$options.__file ? ` at ${vm.$options.__file}` : '')\n    );\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(_: (callback: EventProcessor) => void, getCurrentHub: () => Hub): void {\n    // tslint:disable:no-unsafe-any\n\n    if (!this._Vue || !this._Vue.config) {\n      logger.error('VueIntegration is missing a Vue instance');\n      return;\n    }\n\n    const oldOnError = this._Vue.config.errorHandler;\n\n    this._Vue.config.errorHandler = (error: Error, vm: { [key: string]: any }, info: string): void => {\n      const metadata: Metadata = {};\n\n      if (isPlainObject(vm)) {\n        metadata.componentName = this._formatComponentName(vm);\n\n        if (this._attachProps) {\n          metadata.propsData = vm.$options.propsData;\n        }\n      }\n\n      if (info !== void 0) {\n        metadata.lifecycleHook = info;\n      }\n\n      if (getCurrentHub().getIntegration(Vue)) {\n        // This timeout makes sure that any breadcrumbs are recorded before sending it off the sentry\n        setTimeout(() => {\n          getCurrentHub().withScope(scope => {\n            scope.setContext('vue', metadata);\n            getCurrentHub().captureException(error);\n          });\n        });\n      }\n\n      if (typeof oldOnError === 'function') {\n        oldOnError.call(this._Vue, error, vm, info);\n      }\n    };\n  }\n}\n","import Vue from 'vue';\r\nimport * as Sentry from '@sentry/browser';\r\nimport { Vue as VueIntegration } from '@sentry/integrations';\r\nSentry.init({\r\n    dsn: process.env.SENTRY_LARAVEL_DSN,\r\n    integrations: [new VueIntegration({ Vue: Vue, attachProps: true })],\r\n});\r\n","module.exports = function(originalModule) {\n\tif (!originalModule.webpackPolyfill) {\n\t\tvar module = Object.create(originalModule);\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"exports\", {\n\t\t\tenumerable: true\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","import { consoleSandbox, getGlobalObject } from './misc';\n\n// TODO: Implement different loggers for different environments\nconst global = getGlobalObject<Window | NodeJS.Global>();\n\n/** Prefix for logging strings */\nconst PREFIX = 'Sentry Logger ';\n\n/** JSDoc */\nclass Logger {\n  /** JSDoc */\n  private _enabled: boolean;\n\n  /** JSDoc */\n  public constructor() {\n    this._enabled = false;\n  }\n\n  /** JSDoc */\n  public disable(): void {\n    this._enabled = false;\n  }\n\n  /** JSDoc */\n  public enable(): void {\n    this._enabled = true;\n  }\n\n  /** JSDoc */\n  public log(...args: any[]): void {\n    if (!this._enabled) {\n      return;\n    }\n    consoleSandbox(() => {\n      global.console.log(`${PREFIX}[Log]: ${args.join(' ')}`); // tslint:disable-line:no-console\n    });\n  }\n\n  /** JSDoc */\n  public warn(...args: any[]): void {\n    if (!this._enabled) {\n      return;\n    }\n    consoleSandbox(() => {\n      global.console.warn(`${PREFIX}[Warn]: ${args.join(' ')}`); // tslint:disable-line:no-console\n    });\n  }\n\n  /** JSDoc */\n  public error(...args: any[]): void {\n    if (!this._enabled) {\n      return;\n    }\n    consoleSandbox(() => {\n      global.console.error(`${PREFIX}[Error]: ${args.join(' ')}`); // tslint:disable-line:no-console\n    });\n  }\n}\n\n// Ensure we only have a single logger instance, even if multiple versions of @sentry/utils are being used\nglobal.__SENTRY__ = global.__SENTRY__ || {};\nconst logger = (global.__SENTRY__.logger as Logger) || (global.__SENTRY__.logger = new Logger());\n\nexport { logger };\n","import { Event, Integration, Mechanism, WrappedFunction } from '@sentry/types';\n\n/** Internal */\ninterface SentryGlobal {\n  Sentry?: {\n    Integrations?: Integration[];\n  };\n  SENTRY_ENVIRONMENT?: string;\n  SENTRY_DSN?: string;\n  SENTRY_RELEASE?: {\n    id?: string;\n  };\n  __SENTRY__: {\n    globalEventProcessors: any;\n    hub: any;\n    logger: any;\n  };\n}\n\n/**\n * Requires a module which is protected _against bundler minification.\n *\n * @param request The module path to resolve\n */\nexport function dynamicRequire(mod: any, request: string): any {\n  // tslint:disable-next-line: no-unsafe-any\n  return mod.require(request);\n}\n\n/**\n * Checks whether we're in the Node.js or Browser environment\n *\n * @returns Answer to given question\n */\nexport function isNodeEnv(): boolean {\n  // tslint:disable:strict-type-predicates\n  return Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]';\n}\n\nconst fallbackGlobalObject = {};\n\n/**\n * Safely get global scope object\n *\n * @returns Global scope object\n */\nexport function getGlobalObject<T>(): T & SentryGlobal {\n  return (isNodeEnv()\n    ? global\n    : typeof window !== 'undefined'\n    ? window\n    : typeof self !== 'undefined'\n    ? self\n    : fallbackGlobalObject) as T & SentryGlobal;\n}\n// tslint:enable:strict-type-predicates\n\n/**\n * Extended Window interface that allows for Crypto API usage in IE browsers\n */\ninterface MsCryptoWindow extends Window {\n  msCrypto?: Crypto;\n}\n\n/**\n * UUID4 generator\n *\n * @returns string Generated UUID4.\n */\nexport function uuid4(): string {\n  const global = getGlobalObject() as MsCryptoWindow;\n  const crypto = global.crypto || global.msCrypto;\n\n  if (!(crypto === void 0) && crypto.getRandomValues) {\n    // Use window.crypto API if available\n    const arr = new Uint16Array(8);\n    crypto.getRandomValues(arr);\n\n    // set 4 in byte 7\n    // tslint:disable-next-line:no-bitwise\n    arr[3] = (arr[3] & 0xfff) | 0x4000;\n    // set 2 most significant bits of byte 9 to '10'\n    // tslint:disable-next-line:no-bitwise\n    arr[4] = (arr[4] & 0x3fff) | 0x8000;\n\n    const pad = (num: number): string => {\n      let v = num.toString(16);\n      while (v.length < 4) {\n        v = `0${v}`;\n      }\n      return v;\n    };\n\n    return (\n      pad(arr[0]) + pad(arr[1]) + pad(arr[2]) + pad(arr[3]) + pad(arr[4]) + pad(arr[5]) + pad(arr[6]) + pad(arr[7])\n    );\n  }\n  // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/2117523#2117523\n  return 'xxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx'.replace(/[xy]/g, c => {\n    // tslint:disable-next-line:no-bitwise\n    const r = (Math.random() * 16) | 0;\n    // tslint:disable-next-line:no-bitwise\n    const v = c === 'x' ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n}\n\n/**\n * Parses string form of URL into an object\n * // borrowed from https://tools.ietf.org/html/rfc3986#appendix-B\n * // intentionally using regex and not <a/> href parsing trick because React Native and other\n * // environments where DOM might not be available\n * @returns parsed URL object\n */\nexport function parseUrl(\n  url: string,\n): {\n  host?: string;\n  path?: string;\n  protocol?: string;\n  relative?: string;\n} {\n  if (!url) {\n    return {};\n  }\n\n  const match = url.match(/^(([^:\\/?#]+):)?(\\/\\/([^\\/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?$/);\n\n  if (!match) {\n    return {};\n  }\n\n  // coerce to undefined values to empty string so we don't get 'undefined'\n  const query = match[6] || '';\n  const fragment = match[8] || '';\n  return {\n    host: match[4],\n    path: match[5],\n    protocol: match[2],\n    relative: match[5] + query + fragment, // everything minus origin\n  };\n}\n\n/**\n * Extracts either message or type+value from an event that can be used for user-facing logs\n * @returns event's description\n */\nexport function getEventDescription(event: Event): string {\n  if (event.message) {\n    return event.message;\n  }\n  if (event.exception && event.exception.values && event.exception.values[0]) {\n    const exception = event.exception.values[0];\n\n    if (exception.type && exception.value) {\n      return `${exception.type}: ${exception.value}`;\n    }\n    return exception.type || exception.value || event.event_id || '<unknown>';\n  }\n  return event.event_id || '<unknown>';\n}\n\n/** JSDoc */\ninterface ExtensibleConsole extends Console {\n  [key: string]: any;\n}\n\n/** JSDoc */\nexport function consoleSandbox(callback: () => any): any {\n  const global = getGlobalObject<Window>();\n  const levels = ['debug', 'info', 'warn', 'error', 'log', 'assert'];\n\n  if (!('console' in global)) {\n    return callback();\n  }\n\n  const originalConsole = global.console as ExtensibleConsole;\n  const wrappedLevels: { [key: string]: any } = {};\n\n  // Restore all wrapped console methods\n  levels.forEach(level => {\n    if (level in global.console && (originalConsole[level] as WrappedFunction).__sentry__) {\n      wrappedLevels[level] = (originalConsole[level] as WrappedFunction).__sentry_wrapped__;\n      originalConsole[level] = (originalConsole[level] as WrappedFunction).__sentry_original__;\n    }\n  });\n\n  // Perform callback manipulations\n  const result = callback();\n\n  // Revert restoration to wrapped state\n  Object.keys(wrappedLevels).forEach(level => {\n    originalConsole[level] = wrappedLevels[level];\n  });\n\n  return result;\n}\n\n/**\n * Adds exception values, type and value to an synthetic Exception.\n * @param event The event to modify.\n * @param value Value of the exception.\n * @param type Type of the exception.\n * @param mechanism Mechanism of the exception.\n * @hidden\n */\nexport function addExceptionTypeValue(\n  event: Event,\n  value?: string,\n  type?: string,\n  mechanism: Mechanism = {\n    handled: true,\n    type: 'generic',\n  },\n): void {\n  event.exception = event.exception || {};\n  event.exception.values = event.exception.values || [];\n  event.exception.values[0] = event.exception.values[0] || {};\n  event.exception.values[0].value = event.exception.values[0].value || value || '';\n  event.exception.values[0].type = event.exception.values[0].type || type || 'Error';\n  event.exception.values[0].mechanism = event.exception.values[0].mechanism || mechanism;\n}\n","import { Breadcrumb, Event, EventHint, EventProcessor, Scope as ScopeInterface, Severity, User } from '@sentry/types';\nimport { getGlobalObject, isThenable, normalize, SyncPromise } from '@sentry/utils';\n\nimport { Span } from './span';\n\n/**\n * Holds additional event information. {@link Scope.applyToEvent} will be\n * called by the client before an event will be sent.\n */\nexport class Scope implements ScopeInterface {\n  /** Flag if notifiying is happening. */\n  protected _notifyingListeners: boolean = false;\n\n  /** Callback for client to receive scope changes. */\n  protected _scopeListeners: Array<(scope: Scope) => void> = [];\n\n  /** Callback list that will be called after {@link applyToEvent}. */\n  protected _eventProcessors: EventProcessor[] = [];\n\n  /** Array of breadcrumbs. */\n  protected _breadcrumbs: Breadcrumb[] = [];\n\n  /** User */\n  protected _user: User = {};\n\n  /** Tags */\n  protected _tags: { [key: string]: string } = {};\n\n  /** Extra */\n  protected _extra: { [key: string]: any } = {};\n\n  /** Contexts */\n  protected _context: { [key: string]: any } = {};\n\n  /** Fingerprint */\n  protected _fingerprint?: string[];\n\n  /** Severity */\n  protected _level?: Severity;\n\n  /** Transaction */\n  protected _transaction?: string;\n\n  /** Span */\n  protected _span?: Span;\n\n  /**\n   * Add internal on change listener. Used for sub SDKs that need to store the scope.\n   * @hidden\n   */\n  public addScopeListener(callback: (scope: Scope) => void): void {\n    this._scopeListeners.push(callback);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public addEventProcessor(callback: EventProcessor): this {\n    this._eventProcessors.push(callback);\n    return this;\n  }\n\n  /**\n   * This will be called on every set call.\n   */\n  protected _notifyScopeListeners(): void {\n    if (!this._notifyingListeners) {\n      this._notifyingListeners = true;\n      setTimeout(() => {\n        this._scopeListeners.forEach(callback => {\n          callback(this);\n        });\n        this._notifyingListeners = false;\n      });\n    }\n  }\n\n  /**\n   * This will be called after {@link applyToEvent} is finished.\n   */\n  protected _notifyEventProcessors(\n    processors: EventProcessor[],\n    event: Event | null,\n    hint?: EventHint,\n    index: number = 0,\n  ): SyncPromise<Event | null> {\n    return new SyncPromise<Event | null>((resolve, reject) => {\n      const processor = processors[index];\n      // tslint:disable-next-line:strict-type-predicates\n      if (event === null || typeof processor !== 'function') {\n        resolve(event);\n      } else {\n        const result = processor({ ...event }, hint) as Event | null;\n        if (isThenable(result)) {\n          (result as Promise<Event | null>)\n            .then(final => this._notifyEventProcessors(processors, final, hint, index + 1).then(resolve))\n            .catch(reject);\n        } else {\n          this._notifyEventProcessors(processors, result, hint, index + 1)\n            .then(resolve)\n            .catch(reject);\n        }\n      }\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setUser(user: User | null): this {\n    this._user = normalize(user);\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setTags(tags: { [key: string]: string }): this {\n    this._tags = {\n      ...this._tags,\n      ...normalize(tags),\n    };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setTag(key: string, value: string): this {\n    this._tags = { ...this._tags, [key]: normalize(value) };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setExtras(extra: { [key: string]: any }): this {\n    this._extra = {\n      ...this._extra,\n      ...normalize(extra),\n    };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setExtra(key: string, extra: any): this {\n    this._extra = { ...this._extra, [key]: normalize(extra) };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setFingerprint(fingerprint: string[]): this {\n    this._fingerprint = normalize(fingerprint);\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setLevel(level: Severity): this {\n    this._level = normalize(level);\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setTransaction(transaction?: string): this {\n    this._transaction = transaction;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setContext(name: string, context: { [key: string]: any } | null): this {\n    this._context[name] = context ? normalize(context) : undefined;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setSpan(span?: Span): this {\n    this._span = span;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public startSpan(parentSpan?: Span): Span {\n    const span = new Span();\n    span.setParent(parentSpan);\n    this.setSpan(span);\n    return span;\n  }\n\n  /**\n   * Internal getter for Span, used in Hub.\n   * @hidden\n   */\n  public getSpan(): Span | undefined {\n    return this._span;\n  }\n\n  /**\n   * Inherit values from the parent scope.\n   * @param scope to clone.\n   */\n  public static clone(scope?: Scope): Scope {\n    const newScope = new Scope();\n    Object.assign(newScope, scope, {\n      _scopeListeners: [],\n    });\n    if (scope) {\n      newScope._breadcrumbs = [...scope._breadcrumbs];\n      newScope._tags = { ...scope._tags };\n      newScope._extra = { ...scope._extra };\n      newScope._context = { ...scope._context };\n      newScope._user = scope._user;\n      newScope._level = scope._level;\n      newScope._span = scope._span;\n      newScope._transaction = scope._transaction;\n      newScope._fingerprint = scope._fingerprint;\n      newScope._eventProcessors = [...scope._eventProcessors];\n    }\n    return newScope;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public clear(): this {\n    this._breadcrumbs = [];\n    this._tags = {};\n    this._extra = {};\n    this._user = {};\n    this._context = {};\n    this._level = undefined;\n    this._transaction = undefined;\n    this._fingerprint = undefined;\n    this._span = undefined;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public addBreadcrumb(breadcrumb: Breadcrumb, maxBreadcrumbs?: number): this {\n    const timestamp = new Date().getTime() / 1000;\n    const mergedBreadcrumb = { timestamp, ...breadcrumb };\n\n    this._breadcrumbs =\n      maxBreadcrumbs !== undefined && maxBreadcrumbs >= 0\n        ? [...this._breadcrumbs, normalize(mergedBreadcrumb)].slice(-maxBreadcrumbs)\n        : [...this._breadcrumbs, normalize(mergedBreadcrumb)];\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public clearBreadcrumbs(): this {\n    this._breadcrumbs = [];\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * Applies fingerprint from the scope to the event if there's one,\n   * uses message if there's one instead or get rid of empty fingerprint\n   */\n  private _applyFingerprint(event: Event): void {\n    // Make sure it's an array first and we actually have something in place\n    event.fingerprint = event.fingerprint\n      ? Array.isArray(event.fingerprint)\n        ? event.fingerprint\n        : [event.fingerprint]\n      : [];\n\n    // If we have something on the scope, then merge it with event\n    if (this._fingerprint) {\n      event.fingerprint = event.fingerprint.concat(this._fingerprint);\n    }\n\n    // If we have no data at all, remove empty array default\n    if (event.fingerprint && !event.fingerprint.length) {\n      delete event.fingerprint;\n    }\n  }\n\n  /**\n   * Applies the current context and fingerprint to the event.\n   * Note that breadcrumbs will be added by the client.\n   * Also if the event has already breadcrumbs on it, we do not merge them.\n   * @param event Event\n   * @param hint May contain additional informartion about the original exception.\n   * @hidden\n   */\n  public applyToEvent(event: Event, hint?: EventHint): SyncPromise<Event | null> {\n    if (this._extra && Object.keys(this._extra).length) {\n      event.extra = { ...this._extra, ...event.extra };\n    }\n    if (this._tags && Object.keys(this._tags).length) {\n      event.tags = { ...this._tags, ...event.tags };\n    }\n    if (this._user && Object.keys(this._user).length) {\n      event.user = { ...this._user, ...event.user };\n    }\n    if (this._context && Object.keys(this._context).length) {\n      event.contexts = { ...this._context, ...event.contexts };\n    }\n    if (this._level) {\n      event.level = this._level;\n    }\n    if (this._transaction) {\n      event.transaction = this._transaction;\n    }\n    if (this._span) {\n      event.contexts = event.contexts || {};\n      event.contexts.trace = this._span;\n    }\n\n    this._applyFingerprint(event);\n\n    event.breadcrumbs = [...(event.breadcrumbs || []), ...this._breadcrumbs];\n    event.breadcrumbs = event.breadcrumbs.length > 0 ? event.breadcrumbs : undefined;\n\n    return this._notifyEventProcessors([...getGlobalEventProcessors(), ...this._eventProcessors], event, hint);\n  }\n}\n\n/**\n * Retruns the global event processors.\n */\nfunction getGlobalEventProcessors(): EventProcessor[] {\n  const global = getGlobalObject<Window | NodeJS.Global>();\n  global.__SENTRY__ = global.__SENTRY__ || {};\n  global.__SENTRY__.globalEventProcessors = global.__SENTRY__.globalEventProcessors || [];\n  return global.__SENTRY__.globalEventProcessors;\n}\n\n/**\n * Add a EventProcessor to be kept globally.\n * @param callback EventProcessor to add\n */\nexport function addGlobalEventProcessor(callback: EventProcessor): void {\n  getGlobalEventProcessors().push(callback);\n}\n","import {\n  Breadcrumb,\n  BreadcrumbHint,\n  Client,\n  Event,\n  EventHint,\n  Hub as HubInterface,\n  Integration,\n  IntegrationClass,\n  Severity,\n  User,\n} from '@sentry/types';\nimport { consoleSandbox, dynamicRequire, getGlobalObject, logger, uuid4 } from '@sentry/utils';\n\nimport { Carrier, Layer } from './interfaces';\nimport { Scope } from './scope';\n\ndeclare module 'domain' {\n  export let active: Domain;\n  /**\n   * Extension for domain interface\n   */\n  export interface Domain {\n    __SENTRY__?: Carrier;\n  }\n}\n\n/**\n * API compatibility version of this hub.\n *\n * WARNING: This number should only be incresed when the global interface\n * changes a and new methods are introduced.\n *\n * @hidden\n */\nexport const API_VERSION = 3;\n\n/**\n * Default maximum number of breadcrumbs added to an event. Can be overwritten\n * with {@link Options.maxBreadcrumbs}.\n */\nconst DEFAULT_BREADCRUMBS = 30;\n\n/**\n * Absolute maximum number of breadcrumbs added to an event. The\n * `maxBreadcrumbs` option cannot be higher than this value.\n */\nconst MAX_BREADCRUMBS = 100;\n\n/**\n * @inheritDoc\n */\nexport class Hub implements HubInterface {\n  /** Is a {@link Layer}[] containing the client and scope */\n  private readonly _stack: Layer[] = [];\n\n  /** Contains the last event id of a captured event.  */\n  private _lastEventId?: string;\n\n  /**\n   * Creates a new instance of the hub, will push one {@link Layer} into the\n   * internal stack on creation.\n   *\n   * @param client bound to the hub.\n   * @param scope bound to the hub.\n   * @param version number, higher number means higher priority.\n   */\n  public constructor(client?: Client, scope: Scope = new Scope(), private readonly _version: number = API_VERSION) {\n    this._stack.push({ client, scope });\n  }\n\n  /**\n   * Internal helper function to call a method on the top client if it exists.\n   *\n   * @param method The method to call on the client.\n   * @param args Arguments to pass to the client function.\n   */\n  private _invokeClient<M extends keyof Client>(method: M, ...args: any[]): void {\n    const top = this.getStackTop();\n    if (top && top.client && top.client[method]) {\n      (top.client as any)[method](...args, top.scope);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public isOlderThan(version: number): boolean {\n    return this._version < version;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public bindClient(client?: Client): void {\n    const top = this.getStackTop();\n    top.client = client;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public pushScope(): Scope {\n    // We want to clone the content of prev scope\n    const stack = this.getStack();\n    const parentScope = stack.length > 0 ? stack[stack.length - 1].scope : undefined;\n    const scope = Scope.clone(parentScope);\n    this.getStack().push({\n      client: this.getClient(),\n      scope,\n    });\n    return scope;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public popScope(): boolean {\n    return this.getStack().pop() !== undefined;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public withScope(callback: (scope: Scope) => void): void {\n    const scope = this.pushScope();\n    try {\n      callback(scope);\n    } finally {\n      this.popScope();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getClient<C extends Client>(): C | undefined {\n    return this.getStackTop().client as C;\n  }\n\n  /** Returns the scope of the top stack. */\n  public getScope(): Scope | undefined {\n    return this.getStackTop().scope;\n  }\n\n  /** Returns the scope stack for domains or the process. */\n  public getStack(): Layer[] {\n    return this._stack;\n  }\n\n  /** Returns the topmost scope layer in the order domain > local > process. */\n  public getStackTop(): Layer {\n    return this._stack[this._stack.length - 1];\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureException(exception: any, hint?: EventHint): string {\n    const eventId = (this._lastEventId = uuid4());\n    let finalHint = hint;\n\n    // If there's no explicit hint provided, mimick the same thing that would happen\n    // in the minimal itself to create a consistent behavior.\n    // We don't do this in the client, as it's the lowest level API, and doing this,\n    // would prevent user from having full control over direct calls.\n    if (!hint) {\n      let syntheticException: Error;\n      try {\n        throw new Error('Sentry syntheticException');\n      } catch (exception) {\n        syntheticException = exception as Error;\n      }\n      finalHint = {\n        originalException: exception,\n        syntheticException,\n      };\n    }\n\n    this._invokeClient('captureException', exception, {\n      ...finalHint,\n      event_id: eventId,\n    });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureMessage(message: string, level?: Severity, hint?: EventHint): string {\n    const eventId = (this._lastEventId = uuid4());\n    let finalHint = hint;\n\n    // If there's no explicit hint provided, mimick the same thing that would happen\n    // in the minimal itself to create a consistent behavior.\n    // We don't do this in the client, as it's the lowest level API, and doing this,\n    // would prevent user from having full control over direct calls.\n    if (!hint) {\n      let syntheticException: Error;\n      try {\n        throw new Error(message);\n      } catch (exception) {\n        syntheticException = exception as Error;\n      }\n      finalHint = {\n        originalException: message,\n        syntheticException,\n      };\n    }\n\n    this._invokeClient('captureMessage', message, level, {\n      ...finalHint,\n      event_id: eventId,\n    });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureEvent(event: Event, hint?: EventHint): string {\n    const eventId = (this._lastEventId = uuid4());\n    this._invokeClient('captureEvent', event, {\n      ...hint,\n      event_id: eventId,\n    });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public lastEventId(): string | undefined {\n    return this._lastEventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public addBreadcrumb(breadcrumb: Breadcrumb, hint?: BreadcrumbHint): void {\n    const top = this.getStackTop();\n\n    if (!top.scope || !top.client) {\n      return;\n    }\n\n    const { beforeBreadcrumb = null, maxBreadcrumbs = DEFAULT_BREADCRUMBS } =\n      (top.client.getOptions && top.client.getOptions()) || {};\n\n    if (maxBreadcrumbs <= 0) {\n      return;\n    }\n\n    const timestamp = new Date().getTime() / 1000;\n    const mergedBreadcrumb = { timestamp, ...breadcrumb };\n    const finalBreadcrumb = beforeBreadcrumb\n      ? (consoleSandbox(() => beforeBreadcrumb(mergedBreadcrumb, hint)) as Breadcrumb | null)\n      : mergedBreadcrumb;\n\n    if (finalBreadcrumb === null) {\n      return;\n    }\n\n    top.scope.addBreadcrumb(finalBreadcrumb, Math.min(maxBreadcrumbs, MAX_BREADCRUMBS));\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setUser(user: User | null): void {\n    const top = this.getStackTop();\n    if (!top.scope) {\n      return;\n    }\n    top.scope.setUser(user);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setTags(tags: { [key: string]: string }): void {\n    const top = this.getStackTop();\n    if (!top.scope) {\n      return;\n    }\n    top.scope.setTags(tags);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setExtras(extras: { [key: string]: any }): void {\n    const top = this.getStackTop();\n    if (!top.scope) {\n      return;\n    }\n    top.scope.setExtras(extras);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setTag(key: string, value: string): void {\n    const top = this.getStackTop();\n    if (!top.scope) {\n      return;\n    }\n    top.scope.setTag(key, value);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setExtra(key: string, extra: any): void {\n    const top = this.getStackTop();\n    if (!top.scope) {\n      return;\n    }\n    top.scope.setExtra(key, extra);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setContext(name: string, context: { [key: string]: any } | null): void {\n    const top = this.getStackTop();\n    if (!top.scope) {\n      return;\n    }\n    top.scope.setContext(name, context);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public configureScope(callback: (scope: Scope) => void): void {\n    const top = this.getStackTop();\n    if (top.scope && top.client) {\n      callback(top.scope);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public run(callback: (hub: Hub) => void): void {\n    const oldHub = makeMain(this);\n    try {\n      callback(this);\n    } finally {\n      makeMain(oldHub);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getIntegration<T extends Integration>(integration: IntegrationClass<T>): T | null {\n    const client = this.getClient();\n    if (!client) {\n      return null;\n    }\n    try {\n      return client.getIntegration(integration);\n    } catch (_oO) {\n      logger.warn(`Cannot retrieve integration ${integration.id} from the current Hub`);\n      return null;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public traceHeaders(): { [key: string]: string } {\n    const top = this.getStackTop();\n    if (top.scope && top.client) {\n      const span = top.scope.getSpan();\n      if (span) {\n        return {\n          'sentry-trace': span.toTraceparent(),\n        };\n      }\n    }\n    return {};\n  }\n}\n\n/** Returns the global shim registry. */\nexport function getMainCarrier(): Carrier {\n  const carrier = getGlobalObject();\n  carrier.__SENTRY__ = carrier.__SENTRY__ || {\n    hub: undefined,\n  };\n  return carrier;\n}\n\n/**\n * Replaces the current main hub with the passed one on the global object\n *\n * @returns The old replaced hub\n */\nexport function makeMain(hub: Hub): Hub {\n  const registry = getMainCarrier();\n  const oldHub = getHubFromCarrier(registry);\n  setHubOnCarrier(registry, hub);\n  return oldHub;\n}\n\n/**\n * Returns the default hub instance.\n *\n * If a hub is already registered in the global carrier but this module\n * contains a more recent version, it replaces the registered version.\n * Otherwise, the currently registered hub will be returned.\n */\nexport function getCurrentHub(): Hub {\n  // Get main carrier (global for every environment)\n  const registry = getMainCarrier();\n\n  // If there's no hub, or its an old API, assign a new one\n  if (!hasHubOnCarrier(registry) || getHubFromCarrier(registry).isOlderThan(API_VERSION)) {\n    setHubOnCarrier(registry, new Hub());\n  }\n\n  // Prefer domains over global if they are there\n  try {\n    // We need to use `dynamicRequire` because `require` on it's own will be optimized by webpack.\n    // We do not want this to happen, we need to try to `require` the domain node module and fail if we are in browser\n    // for example so we do not have to shim it and use `getCurrentHub` universally.\n    const domain = dynamicRequire(module, 'domain');\n    const activeDomain = domain.active;\n\n    // If there no active domain, just return global hub\n    if (!activeDomain) {\n      return getHubFromCarrier(registry);\n    }\n\n    // If there's no hub on current domain, or its an old API, assign a new one\n    if (!hasHubOnCarrier(activeDomain) || getHubFromCarrier(activeDomain).isOlderThan(API_VERSION)) {\n      const registryHubTopStack = getHubFromCarrier(registry).getStackTop();\n      setHubOnCarrier(activeDomain, new Hub(registryHubTopStack.client, Scope.clone(registryHubTopStack.scope)));\n    }\n\n    // Return hub that lives on a domain\n    return getHubFromCarrier(activeDomain);\n  } catch (_Oo) {\n    // Return hub that lives on a global object\n    return getHubFromCarrier(registry);\n  }\n}\n\n/**\n * This will tell whether a carrier has a hub on it or not\n * @param carrier object\n */\nfunction hasHubOnCarrier(carrier: Carrier): boolean {\n  if (carrier && carrier.__SENTRY__ && carrier.__SENTRY__.hub) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * This will create a new {@link Hub} and add to the passed object on\n * __SENTRY__.hub.\n * @param carrier object\n * @hidden\n */\nexport function getHubFromCarrier(carrier: Carrier): Hub {\n  if (carrier && carrier.__SENTRY__ && carrier.__SENTRY__.hub) {\n    return carrier.__SENTRY__.hub;\n  }\n  carrier.__SENTRY__ = carrier.__SENTRY__ || {};\n  carrier.__SENTRY__.hub = new Hub();\n  return carrier.__SENTRY__.hub;\n}\n\n/**\n * This will set passed {@link Hub} on the passed object's __SENTRY__.hub attribute\n * @param carrier object\n * @param hub Hub\n */\nexport function setHubOnCarrier(carrier: Carrier, hub: Hub): boolean {\n  if (!carrier) {\n    return false;\n  }\n  carrier.__SENTRY__ = carrier.__SENTRY__ || {};\n  carrier.__SENTRY__.hub = hub;\n  return true;\n}\n"],"sourceRoot":""}